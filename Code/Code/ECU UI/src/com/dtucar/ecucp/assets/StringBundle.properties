# Localized strings #
# In theory, all strings should be located here and referenced through Locator.getResources().getString(key) in Java
# or %key in fxml
# but for simplicity, all short strings are hardcoded in Java and fxml where they are used.
# This makes is a bit easier to change those strings and makes it more readable.
# Longer strings (such as explanation tooltips) are stored here.

# General strings #
window_title = ECU Control Panel
no_ports = No ports found
suggested_log_file_name = ECU Log
suggested_can_file_name = CAN Log
suggested_test_file_name = Test Log
suggested_test_config_file_name = Test Config

# About strings #
about_header = DTU Roadrunners ECU Control Panel
version_prefix = Version
version = 1.0.4
version_suffix = (Final 2018)
about_text = Developed by Henning Si H\u00F8j\nTechnical University of Denmark\n2018

# Configuration #
engine_calibration_tooltip  =  The engine calibration gives information about the offset of the relative \
  engine encoder's Z-pulse with respect to the position of the engine cylinder. \
  This value needs to be changed every time the encoder has been reinstalled. \
  The Encoder tab can help with finding this value (but a Mek is needed to verify).
max_rpm_tooltip = The global maximum RPM of the engine. If the RPM exceeds this limit, the injection and \
  ignition is paused until the RPM falls below the threshold again.
start_limit_tooltip = The RPM at which the electric starter should cut off.\n\
  When the RPM exceeds this value, operation of the starter motor is stopped.
idle_limit_tooltip = The maximum RPM limit when in idle.\n\
  This limit is used when running in idle and cannot be higher than Max RPM limit\
  (see Max RPM limit, which is still in effect in idle).
fuel_tank_volume_tooltip = The volume of the fuel tank (intended for participation in the Driver's World Championship (DWC)).
ignition_dwell_time_tooltip = The dwell time of the ignition coil.\n\
  This is the time during which the coil is charged. \
  The value should never exceed the maximum dwell time of the coil (see coil datasheet).
injection_timing_tooltip = The injection timing (in crank angle degrees before top dead centre)
idle_injection_tooltip = The idle injection time (how long we should inject fuel when in idle).\n\
  This overrules all table values when running in idle.
gear_change_wait_tooltip = The time to wait with no engine action before changing gear.\n\
  The ECU will pause the engine and wait for the RPM to fall \
  below the gear change limit, then it will initiate the gear \
  change (move the servo), and after gear change wait, it will \
  will resume the engine.
gear_change_limit_tooltip = The RPM limit of the gear change (no change will occur above this limit).\n\
  The ECU will pause the engine and wait for the RPM to fall below the \
  gear change limit, then it will initiate the gear change (move the servo), \
  and after gear change wait, it will resume the engine.
gear_up_speed_tooltip = The speed at which to change to second gear.\n\
  When the speed is above this value, the gear change will be initiated.
gear_down_speed_tooltip = The speed at which to change down to first gear.\n\
  When the speed is below this value, the gear change will be initiated.
fuel_conversion_slope_tooltip = Fuel conversion slope.\n\
  This value is used to calculate how much fuel mass is used by injection time.\n\
  Fuel mass [g] = slope * injection_time + intercept
fuel_conversion_intercept_tooltip = Fuel conversion intercept.\n\
  This value is used to calculate how much fuel mass is used by injection time.\n\
  Fuel mass [g] = slope * injection_time + intercept
lambda_conversion_slope_tooltip = Lambda (air to fuel ratio) conversion slope (see Lambda sensor datasheet)\n\
  Higher lambda means lean engine (a lot of air, not a lot of fuel). Lower lambda means rich engine (a lot of fuel, not a lot of air).\n\
  Lambda = slope * lambda_adc + intercept
lambda_conversion_intercept_tooltip = Lambda (air to fuel ratio) conversion intercept (see Lambda sensor datasheet)\n\
  Higher lambda means lean engine (a lot of air, not a lot of fuel). Lower lambda means rich engine (a lot of fuel, not a lot of air).\n\
  Lambda = slope * lambda_adc + intercept
fuel_density_tooltip = The fuel density of the fuel in use (e.g. of Ethanol)\n\
  This is used to calculate the volume of fuel used, from the mass.\n\
  mass / density = volume
fuel_lower_heating_value_tooltip = The fuel lower heating value (energy) of the fuel in use (e.g. of Ethanol)\n\
  This is used to calculate the equivalent km/l gasoline value. \
  We know how much Ethanol we have used, but the km/l value is based on gasoline. \
  (see Shell rules for the exact value)
equivalent_lower_heating_value_tooltip = The equivalent fuel lower heating value (e.g. of Gasoline)\n\
  This is used to calculate the equivalent km/l gasoline value. \
  We know how much Ethanol we have used, but the km/l value is based on gasoline. \
  (see Shell rules for the exact value)
wheel_diameter_tooltip = The diameter of the wheels
pulses_per_revolution_tooltip = The number of wheel sensor pulses per wheel revolution
test_distance_tooltip = The distance after which to stop the test
gear_neutral_pwm_tooltip = The PWM of the neutral gear (servo position, max 255)
gear_1_pwm_tooltip = The PWM of the first gear (servo position, max 255)
gear_2_pwm_tooltip = The PWM of the second gear (servo position, max 255)
log_period_tooltip = The log period is the period (in ms) where the ECU logs to the SD card.\n\
  When the engine is running, ECU logs 10 times faster (1/10 of this value).
time_sync_tooltip = This syncs the time to the ECU, which forwards it to Steering, which has RTC that can hold time even when powered down
fuel_correction_tooltip = The fuel correction value (formerly potentiometer) is multiplied onto all injection timings
